{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD71E02591625FbcdB5F34541Dec4f95612Fc829a",
    "txHash": "0xfe786cdef136337573ee3be09d6e7b8b37c7a80573b0191b55f3e271784f2184"
  },
  "proxies": [
    {
      "address": "0xD703097CE40C78ce1C848f5dEDAf75cb93DCcaBD",
      "txHash": "0x3f34cd1466d8807dcf9da6150804d95eb8cefa840b8dc371fd1c8eb5ca0a7ae9",
      "kind": "transparent"
    },
    {
      "address": "0x256f60920d7641F9Fb69eb423f0d6f7b97803bDa",
      "txHash": "0x7acc96cf6fb3fc5207dd7f77f3b9c1bfcc615799dbc23f18511f64f50c391014",
      "kind": "transparent"
    },
    {
      "address": "0x629ED5d532a9545408adb4B0EC9f84738caE5bF6",
      "txHash": "0x01799e3efc6807e55aca31643f05d0c8a8c5f3b3bee2807c080165d43cc98091",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3b61a4533a539b595f4bca002fce27060b1c84ab092ab98f3d5202df88e9571e": {
      "address": "0xD9c5C33B5e4D294cdC129F50aB472bC384751662",
      "txHash": "0x961fc3154097a00d3faf0ef38768a57a46ad14c27c299d5b34edfe05fd179ce7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../project:/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../project:/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/Initializable.sol:63"
          },
          {
            "contract": "MarketPlace",
            "label": "orders",
            "type": "t_array(t_struct(Order)2683_storage)dyn_storage",
            "src": "../project:/contracts/MarketPlace.sol:25"
          },
          {
            "contract": "MarketPlace",
            "label": "test",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketPlace.sol:26"
          },
          {
            "contract": "MarketPlace",
            "label": "balanceKSM",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MarketPlace.sol:27"
          },
          {
            "contract": "MarketPlace",
            "label": "asks",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MarketPlace.sol:28"
          },
          {
            "contract": "MarketPlace",
            "label": "ordersbyNFT",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/MarketPlace.sol:29"
          },
          {
            "contract": "MarketPlace",
            "label": "asksbySeller",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/MarketPlace.sol:31"
          },
          {
            "contract": "MarketPlace",
            "label": "isEscrow",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MarketPlace.sol:33"
          },
          {
            "contract": "MarketPlace",
            "label": "owner",
            "type": "t_address",
            "src": "../project:/contracts/MarketPlace.sol:36"
          },
          {
            "contract": "MarketPlace",
            "label": "nativecoin",
            "type": "t_address",
            "src": "../project:/contracts/MarketPlace.sol:37"
          },
          {
            "contract": "MarketPlace",
            "label": "_status",
            "type": "t_uint8",
            "src": "../project:/contracts/MarketPlace.sol:54"
          }
        ],
        "types": {
          "t_array(t_struct(Order)2683_storage)dyn_storage": {
            "label": "struct MarketPlace.Order[]"
          },
          "t_struct(Order)2683_storage": {
            "label": "struct MarketPlace.Order",
            "members": [
              {
                "label": "idNFT",
                "type": "t_uint256"
              },
              {
                "label": "currencyCode",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "idCollection",
                "type": "t_address"
              },
              {
                "label": "ownerAddr",
                "type": "t_address"
              },
              {
                "label": "flagActive",
                "type": "t_uint8"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
